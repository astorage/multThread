<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.java.springmultithread.task"/>

    <bean id="simpleService" class="com.java.springmultithread.service.impl.SimpleServiceImpl"/>

    <bean id="threadPool" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!-- 核心线程数  -->
        <property name="corePoolSize" value="10" />
        <!-- 最大线程数 -->
        <property name="maxPoolSize" value="50" />
        <!-- 队列最大长度 >=mainExecutor.maxSize -->
        <property name="queueCapacity" value="1000" />
        <!-- 线程池维护线程所允许的空闲时间 -->
        <property name="keepAliveSeconds" value="300" />
        <!-- 线程池对拒绝任务(无线程可用)的处理策略 -->
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
        </property>
    </bean>

    <bean id="threadPool1" class="java.util.concurrent.ThreadPoolExecutor">
        <constructor-arg name="corePoolSize" value="10"/>
        <constructor-arg name="maximumPoolSize" value="50"/>
        <constructor-arg name="keepAliveTime" value="300"/>
        <constructor-arg name="unit" value="SECONDS"/>
        <constructor-arg name="workQueue" ref="queue1"/>
        <constructor-arg name="threadFactory" ref="threadFactory1"/>
        <constructor-arg name="handler" ref="rejectPolicy"/>
    </bean>
    <bean id="queue1" class="java.util.concurrent.LinkedBlockingQueue"/>
    <bean id="threadFactory1" class="java.util.concurrent.Executors.DefaultThreadFactory"/>
    <bean id="rejectPolicy" class="java.util.concurrent.ThreadPoolExecutor.DiscardOldestPolicy"/>

    <bean id="runnabelTask" class="com.java.springmultithread.task.SecondTask" scope="prototype"/>
    <bean id="callableTask" class="com.java.springmultithread.task.FirstTask" scope="prototype"/>

</beans>